{"version":3,"sources":["components/assignments/sass_intro/cssAssignment_1.png","components/Index.jsx","components/CourseOverview.jsx","components/VimOverview.jsx","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Index","props","react_default","a","createElement","className","href","page","CourseOverview","nextPage","prevPage","SassOverview","App","Switch","Route","path","exact","render","components_Index","components_CourseOverview","VimOverview","Component","Boolean","window","location","hostname","match","app","BrowserRouter","containers_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2df858da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cssAssignment_1.d57f06ad.png\";","import React from 'react'\n\nconst Index = (props) => {\n  const page = 0\n  const nextPage = page+1\n\n  return (\n    <div className=\"module\">\n      <div className=\"module__container\">\n        <h2 className=\"module__title\">Introduction</h2> \n        <h3 className=\"module__objectives\">Course Description:</h3>\n        <p className=\"module__text\">\n          Crash course on how to get up and running with the most powerful and \n          expressive text editor ever created: Vim! This micro-course will teach \n          you everything you need to become a Vim power-user.\n        </p>\n        <h4 className=\"module__sub-title\">\n          Here is a sampling of some of the questions we will address:\n        </h4>\n        <ul className=\"module__list\">\n          <li className=\"module__list--item\">\n            What is Sass and what are its pros and cons?\n          </li> \n          <li className=\"module__list--item\">\n            How do we modularize and make a component-based CSS structure?\n          </li> \n          <li className=\"module__list--item\">\n            How can we use utility classes to <em>'DRY'</em> up our CSS?\n          </li> \n          <li className=\"module__list--item\">\n            How does Sass create variables, mixins, and functions?\n          </li> \n          <li className=\"module__list--item\">\n            How can we use Sass inheritance with the Extend decorator?\n          </li> \n          <li className=\"module__list--item\">\n            How can Sass help create reusable media-query functions?\n          </li> \n          <li className=\"module__list--item\">\n            How can we implement the use of scripting in our dev workflow?\n          </li> \n        </ul>\n        <h4 className=\"module__sub-title\">\n          Prerequisites:\n        </h4>\n        <ul className=\"module__list\">\n          <li className=\"module__list--item\">\n            Basic understanding of CSS and specificity\n          </li> \n          <li className=\"module__list--item\">\n            Comfort using the command line\n          </li> \n        </ul>\n      </div>\n      <div className=\"module__buttons\">\n        <a \n          href={nextPage}\n          className=\"btn u-center u-width-50\">\n          Start Course!\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Index\n","import React from 'react'\n\nconst CourseOverview = (props) => {\n  const page = props.page\n  const nextPage = page+1\n  const prevPage = page-1\n\n  return (\n    <div className=\"module\">\n      <div className=\"module__container\">\n        <h2 className=\"module__title\">Course Overview</h2> \n        <h3 className=\"module__objectives\">Course Objectives:</h3>\n        <p className=\"module__text\">\n          By the end of this course, you will have a solid understanding of: \n        </p>\n        <ul className=\"module__list\">\n          <li className=\"module__list--item u-list-circle\">\n            What is Vim\n          </li> \n          <li className=\"module__list--item u-list-circle\">\n            What is the availability of Vim\n          </li> \n          <li className=\"module__list--item u-list-circle\">\n            What are Vim modes\n          </li> \n          <li className=\"module__list--item u-list-circle\">\n            Navigating with Vim\n          </li> \n          <li className=\"module__list--item u-list-circle\">\n            Changing directories \n          </li> \n          <li className=\"module__list--item u-list-circle\">\n            Using the Vim help builtin\n          </li> \n          <li className=\"module__list--item u-list-circle\">\n            Standard file operation equivalents (e.g. 'Save as')\n          </li> \n          <li className=\"module__list--item u-list-circle\">\n            Switching between multiple files and buffers\n          </li> \n          <li className=\"module__list--item u-list-circle\">\n            Creating a profile and customizing your Vim with .vimrc file\n          </li> \n          <li className=\"module__list--item u-list-circle\">\n            Using search, replace, transform, and substitutions\n          </li> \n          <li className=\"module__list--item u-list-circle\">\n            What are Vim registers and how to use them\n          </li> \n        </ul>\n      </div>    \n      <div className=\"module__buttons\">\n        <a \n          href={prevPage}\n          className=\"btn\">\n          Prev\n        </a>\n        <a \n          href={nextPage}\n          className=\"btn\">\n          Next\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default CourseOverview\n","import React from 'react'\n\nconst SassOverview = (props) => {\n  const page = props.page\n  const nextPage = page+1\n  const prevPage = page-1\n\n  return (\n    <div className=\"module\">\n      <div className=\"module__container\">\n        <h2 className=\"module__title\">The Vim Koolaid</h2> \n        <h3 className=\"module__objectives\">\n          Learning Objectives:\n        </h3>\n        <ul className=\"module__list\">\n          <li className=\"module__list--item\">\n            What is Vim?\n          </li> \n          <li className=\"module__list--item\">\n            Brief history of Vim\n          </li> \n          <li className=\"module__list--item\">\n            What is the difference between Vim and Vi?\n          </li> \n          <li className=\"module__list--item\">\n            What makes Vim special?\n          </li> \n        </ul>\n        <h3 className=\"module__objectives\">\n          What is Vim?\n        </h3>\n        <p className=\"module__text\">\n          Vim stands for Vi IMproved. Originally it used to be Vi IMitation, \n          but there are so many improvements that a name change was appropriate. \n          Vim is a text editor which includes almost all the commands from the \n          Unix program Vi but added numerous new ones as well.  All commands can \n          be given with the keyboard which has the advantage that you never need \n          to move your fingers off the 'home' position (index fingers on 'J' and \n          'F').\n        </p>\n        <h3 className=\"module__objectives\">\n          A brief history of Vi\n        </h3>\n        <p className=\"module__text\">\n          The evolution of Vim is intricately woven to the history of Vi. Vi was\n          created in 1976 and, up until then, some of the most popular editors, like \n          \"qed\", would appear completely alien to us today.  These \"line-editors\" \n          had no menus, and often required typing out regex strings in order to \n          navigate around because they could only view one line at a time. Take \n          a moment to imagine writing a program where you can only read one line \n          at a time and if you wanted to move to a new location you had to write \n          out a regex string on a basic teletype before telling the computer to \n          try and compile it down to machine code. \n        </p>\n        <p className=\"module__text\">\n          Vi was created on a computer that had no arrow keys and a small \n          escape key that jutted out where our Tab-key is now. Because of this, \n          when Vi was being written, the movement keys were mapped to h, j, \n          k, and l, the same movement keys used in Vim to this day. Indeed the \n          vast majority of decisions that lead to the creation of Vi were purely \n          due to the constraints of computers at the time.  Thus it is with some \n          humor to remember that even Bill Joy, the guy who created Vi, jokes \n          that \"People don't know that Vi was written for a world that doesn't \n          exist anymore.\" It is a testament to the software that it has remained \n          one of the most celebrated programs ever written and amongst the most \n          used editors in the world to this day, over 40 years later.\n        </p>\n\n        <h3 className=\"module__objectives\">\n          Vim is fast\n        </h3>\n        <p className=\"module__text\">\n          As web development continues to evolve, the size of projects are becoming \n          orders of magnitude larger. One of the largest issues that VScode is \n          currently faced with is the amount of memory it consumes just to open \n          even a boiler React app without spitting out memory error messages.\n        </p>\n        <p className=\"module__text\">\n          Vi was written in an era when sometimes it took seconds for a computer \n          to respond to a single keystroke, so there simply wasn't the resources \n          to create a memory-expensive editor. Because of this, it was essential \n          that Vi could complete complex tasks by writing out simple commands that \n          a computer could execute without requiring continuous feedback to the \n          user.\n        </p>\n        <h3 className=\"module__objectives\">\n          Vim is powerful\n        </h3>\n        <p className=\"module__text\">\n          It would be logical to deduct that if Vim is so lightweight (using  \n          just a fraction of the memory that other standard editors use) then \n          other editors must be using that memory to offer more power. Yet, the \n          irony is that even the best rated editors like VScode, Atom, Sublime, \n          do not even approach what Vim can do before we begin adding our own \n          custom plugins, macros and key mappings. For instance, every programmer \n          is well acquainted with their clipboard for copying and pasting code. \n          Vim has the equivalent of nearly 40 clipboards (registries) which can append \n          text to them at any point in time. This means that you can scan down \n          your code line by line and grab specific lines related to a function you wish to\n          refactor to be independent of its current function and just continue \n          adding them to the same registry, and then paste it all at once to the new \n          code block.\n          If that doesn't sound cool to you, maybe it's programmable built-in spell \n          checker will get your attention, decreasing the amount of time you \n          spend copying and pasting text back and forth between your html and \n          a word document as you spell check website content for potentially \n          embarrassing typos. Powerful features like these, if they exist, can \n          typically be buried behind endless drop-down menus or unintuitive \n          shortcut keys that are laden with combinations of modifier keys in a \n          traditional editor. With Vim, its all just a keystroke away.\n        </p>\n        <p className=\"module__text\">\n          Vi was written in an era when sometimes it took seconds for a computer \n          to respond to a single keystroke, so there simply wasn't the resources \n          to create a memory-expensive editor. Because of this, it was essential \n          that Vi could complete complex tasks with as few keystrokes as possible, \n          thus resulting in an editor that is not only lightweight but capable \n          of multi-tasking to such an extent that Vim is perhaps more accurately \n          described, not as a text-editor, but as an actual programming \n          language for editing text.\n        </p>\n        <h3 className=\"module__objectives\">\n          Vim is healthy\n        </h3>\n        <p className=\"module__text\">\n          One of the most traumatic injuries a programmer can develop is RSI \n          (repetitive strain injury). Akin to tendinitis for a concert pianist, \n          RSI is so damaging to a programmer that even in minor cases it can impact \n          the ability for us to code (either because we are forced to take additional \n          breaks or because the pain can interfere with our ability to think about \n          our code).  This is why severe cases of RSI can challenge the ability \n          of continuing to pursue programming.\n        </p>\n        <p className=\"module__text\">\n          With a nearly infinite number of shortcuts and programmability, Vim \n          not only reduces the number of keystrokes required to complete our \n          edits, but it also removes a great deal of hand contortions we often \n          are not even really cognizant of. The majority of shortcuts employed \n          by traditional text editors are typically loaded with combinations of \n          ctrl, alt, shift, and command. Vim on the other hand allows the use of \n          modes to differentiate between when we are performing operations, typing, \n          or selecting. If we wished to delete a word, we simply type \"dw\", if \n          we wish to delete 2 words, we type \"2dw\". An entire line of code, \"dd\", \n          or perhaps an entire block of code, \"dap\". If you think about how many \n          keystrokes it would take to perform these kinds of operations in a \n          traditional editor, you can probably begin to appreciate how \n          Vim users end up performing millions (if not billions) of fewer \n          keystrokes over their careers.\n        </p>\n        <h3 className=\"module__objectives\">\n          Vim is everywhere\n        </h3>\n        <p className=\"module__text\">\n          Vim runs on all Unix platforms as well as all Windows platforms that \n          are XP or later. In most cases you will find that it is already installed \n          just waiting to be used. Because of this, Vim users often have their \n          personal settings stored on GitHub and so whether you are working on \n          a new machine or you are using a SSH to interact with server files \n          remotely, all you have to do is perform a simple git clone from the \n          machine's home directory and without a single extra command Vim will \n          automatically import all of your settings and preferences.\n        </p>\n        <h3 className=\"module__objectives\">\n          Does Vim have any cons?\n        </h3>\n        <p className=\"module__text\">\n          Vim is not an IDE, so even with the endless customization options and \n          plugins available, if you have to have a true IDE like Visual Studio \n          or Xcode, Vim is only going to get you part of the way there.\n        </p>\n        <p className=\"module__text\">\n          Vim also comes with a learning curve. There is a joke that if you want \n          to slow down someone new to programming, open Vim and tell them to \n          close it.  Because Vim is modal, beginners to Vim can often feel \n          overwhelmed with their initial inability to perform tasks they never \n          imagined could vary from one editor to another (such as saving or \n          quitting). Because Vim is so programmatic, learning Vim will have the \n          same kind of learning curve when learning to use any new language. \n          Remember when you learned how to write for loops for the first time? \n          I'm sure that by now you don't even think about the construction \n          of a for loop, the same will be true with Vim.\n        </p>\n        <h3 className=\"module__objectives\">\n          And most importantly, Vim is <em>way</em> better than Emacs &#x1F601;\n        </h3>\n      </div>    \n      <div className=\"module__buttons\">\n        <a \n          href={prevPage}\n          className=\"btn\">\n          Prev\n        </a>\n        <a \n          href={nextPage}\n          className=\"btn\">\n          Next\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default SassOverview\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\n// lessons\nimport Index from '../components/Index'\nimport CourseOverview from '../components/CourseOverview'\nimport VimOverview from '../components/VimOverview'\n// import SassInstall from '../components/SassInstall'\n// import RunningSass from '../components/RunningSass'\n\n\n// assignments\nimport SassIntro from '../components/assignments/sass_intro/SassIntro'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"header\">\n          <h1 className=\"header__title\">Vim - Vi Improved</h1>\n        </header>\n        <div className=\"app__container\">\n          <nav className=\"nav\">\n              <a href=\"/\" className=\"nav__link\">\n                <div className=\"nav__section--item\">Intro</div>\n              </a>\n              <a href=\"/1\" className=\"nav__link\">\n                <div className=\"nav__section--item\">Course Overview</div>\n              </a>\n              <a href=\"/2\" className=\"nav__link\">\n                <div className=\"nav__section--item\">Vim Overview</div>\n              </a>\n              <a href=\"/3\" className=\"nav__link\">\n                <div className=\"nav__section--item\">Installing Vim</div>\n              </a>\n              <a href=\"/4\" className=\"nav__link\">\n                <div className=\"nav__section--item\">Vim Quickstart</div>\n              </a>\n              <a href=\"/5\" className=\"nav__link\">\n                <div className=\"nav__section--item\">Thinking In Vim</div>\n              </a>\n              <a href=\"/6\" className=\"nav__link\">\n                <div className=\"nav__section--item\">Vim Help</div>\n              </a>\n              <a href=\"/7\" className=\"nav__link\">\n                <div className=\"nav__section--item\">Transformations & Substitutions</div>\n              </a>\n              <a href=\"/7\" className=\"nav__link\">\n                <div className=\"nav__section--item\">Vim Macros</div>\n              </a>\n\n          </nav>\n          <main className=\"main\">\n            <Switch>\n              <Route path=\"/\"  exact render={(props) => <Index page={0} />} />\n              <Route path=\"/1\" exact render={(props) => <CourseOverview page={1} />} />\n              <Route path=\"/2\" exact render={(props) => <VimOverview page={2} />} />\n            </Switch>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n              // <Route path=\"/2\" exact render={(props) => <VimOverview page={2} />} />\n              // <Route path=\"/3\" exact render={(props) => <InstallingVim page={3} />} />\n              // <Route path=\"/4\" exact render={(props) => <VimQuickstart page={4} />} />\n              // <Route path=\"/5\" exact render={(props) => <ThinkingInVim page={5} />} />\n              // <Route path=\"/6\" exact render={(props) => <VimHelp page={6} />} />\n              // <Route path=\"/7\" exact render={(props) => <TransformSubs page={7} />} />\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport './index.css';\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\n\nconst app = (\n  <BrowserRouter>\n    <App /> \n  </BrowserRouter>\n)\n\n\nReactDOM.render(app, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}